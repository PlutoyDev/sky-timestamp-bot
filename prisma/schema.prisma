// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "build"
}

generator client {
  provider = "prisma-client-js"
  output   = "build"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Guild {
  id String @id @db.VarChar(20) // Discord guild ID

  webhooks        Webhook[]
  TimestampConfig TimestampConfig?
}

model Webhook {
  id        String @id @db.VarChar(20)
  token     String @db.VarChar(68)
  guildId   String @db.VarChar(20)
  channelId String @db.VarChar(20)

  Guild           Guild            @relation(fields: [guildId], references: [id])
  TimestampConfig TimestampConfig?
  Message         Message[]
}

model Message {
  id        String @id @db.VarChar(20)
  webhookId String @db.VarChar(20)
  usedFor   String

  Webhook Webhook @relation(fields: [webhookId], references: [id])
}

model TimestampConfig {
  id          String   @id @default(uuid()) @db.Uuid
  guildId     String   @unique @db.VarChar(20)
  webhookId   String?  @unique @db.VarChar(20)
  messageId   String?  @db.VarChar(20)
  templateIds String[] @db.Uuid

  Guild     Guild      @relation(fields: [guildId], references: [id])
  Webhook   Webhook?   @relation(fields: [webhookId], references: [id])
  Templates Template[]
}

model Template {
  id        String          @id @default(uuid()) @db.Uuid
  recordKey String
  configId  String          @db.Uuid
  template  String
  config    TimestampConfig @relation(fields: [configId], references: [id])

  @@unique([configId, recordKey])
}

model Record {
  key  String     @id
  name String     @unique
  type RecordType

  start DateTime?
  end   DateTime?

  interval         Int?
  offset           Int?
  duration         Int?
  collectibleAfter Int?

  data Json?
}

enum RecordType {
  Recur
  Event
}
